service: my-shop

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - s3:PutObject
        - s3:GetSignedUrl
        - s3:ListBucket
        - sqs:SendMessage
      Resource:
        - "arn:aws:dynamodb:us-east-1:130956142913:table/product"
        - "arn:aws:s3:::emmauploaded/uploaded/*"
        - "arn:aws:sqs:us-east-1:130956142913:catalogItemsQueue"
        - "arn:aws:sns:us-east-1:130956142913:createProductTopic"

plugins:
  - serverless-webpack

package:
  individually: true

functions:
  getProductsList:
    handler: functions/handlers.getProductsList
    events:
      - http:
          path: /products
          method: get
    environment:
      PRODUCTS_TABLE: product
      STOCK_TABLE: stock

  getProductsById:
    handler: functions/handlers.getProductsById
    events:
      - http:
          path: /products/{productId}
          method: get
    environment:
      PRODUCTS_TABLE: product
      STOCK_TABLE: stock

  createProduct:
    handler: functions/handlers.createProduct
    events:
      - http:
          path: /products
          method: post
    environment:
      PRODUCTS_TABLE: product
      STOCK_TABLE: stock

  importProductsFile:
    handler: functions/handlers.importProductsFile
    events:
      - http:
          path: /import
          method: get
          request:
            parameters:
              querystrings:
                name: true
    environment:
      PRODUCTS_TABLE: product
      STOCK_TABLE: stock

  importFileParser:
    handler: functions/handlers.importFileParser
    events:
      - s3:
          bucket: emmauploaded
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/

  catalogBatchProcess:
    handler: functions/handlers.catalogBatchProcess
    events:
      - sqs:
          arn: arn:aws:sqs:us-east-1:130956142913:catalogItemsQueue
          batchSize: 5
    environment:
      PRODUCTS_TABLE: product
      CREATE_PRODUCT_TOPIC_ARN: 
        Ref: createProductTopic

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue

    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic

    createProductSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: vexapem@gmail.com
        Protocol: email
        TopicArn:
          Ref: createProductTopic

